from scrapy.spider import BaseSpider
from scrapy.selector import HtmlXPathSelector

class KolloquiumSpider(BaseSpider):
    name = 'lmu_kolloquium1'
    allowed_domains = ['physik.uni-muenchen.de']
    start_urls = ['http://www.physik.uni-muenchen.de/aus_der_fakultaet/kolloquien/physik_kolloquium/index.html']
  
    def parse(self, response):
        sel = HtmlXPathSelector(response)
        announcements = sel.select("//li[@class='termin']")

        base_url = "/".join(response.url.split("/")[:-1])

        for a in announcements:
            # Date section:
            date_section = a.select("p[@class='g-color-medium g-fontsize-s datum']/text()")
            
            date = date_section.re('(\d{1,2}\.\d{1,2}\.\d{4})')[0]
            times = date_section.re('(\d{1,2}:\d{2})')
            start_time = times[0]
            end_time = times[1] if len(times) > 1 else None
            
            # Title section:
            title_section = a.select("p[@class='g-font-bold titel']/a")
            title = title_section.select('text()').extract()[0].strip(" \n")
            relative_url = title_section.select('@href').extract()[0]
            full_url = None
            
            speaker = a.select("p[@class='untertitel']/text()").extract()[0].strip(" \n")
            location = a.select("p[@class='g-color-medium adresse']/text()").extract()[0].strip(" \n")
            print "-----------"
            print title
            print "/".join([base_url, relative_url])
            
            if end_time:
                print "{0:s} - {1:s} ".format(start_time, end_time),
            else:
                print "{0:s} ".format(start_time), 
            print date
                
            print speaker
            print location
            print "-----------"


